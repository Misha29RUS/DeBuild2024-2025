name: Billing Core API Pipeline

on:
  push:
    branches:
      - master
      - develop/ID-140
    paths:
      - backend/**
      - 'compose.yml'
      - .github/workflows/*-backend.yml

jobs:
#  unit-tests:
#    runs-on: ubuntu-latest
#    name: Unit tests
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Setup JDK
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'temurin'
#
#      - name: Running Unit Tests
#        run: |
#          cd backend/billingCore
#          ./mvnw clean test
  build:
    runs-on: ubuntu-latest
    name: Build backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Compile project
        run: |
          cd backend/billingCore
          chmod +x ./mvnw
          ./mvnw clean compile

  build-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Extract project version
        id: extract_version
        run: |
          cd backend/billingCore
          chmod +x ./mvnw
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/billing-core:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/billing-core:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}

  deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create deployment folder
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp -oStrictHostKeyChecking=no compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          export EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          export EMAIL_USER=${{ secrets.EMAIL_USER }}
          export EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          cd ci-cd
          docker compose -f compose.yml pull -q
          docker compose -f compose.yml up -d
          EOF